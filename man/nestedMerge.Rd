% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zxx.R
\name{nestedMerge}
\alias{nestedMerge}
\alias{nestedmerge}
\title{Merge nested lists}
\usage{
nestedMerge(x, y)

nestedmerge(x, y)
}
\arguments{
\item{x, y}{lists}
}
\description{
Recursive functions to merge nested lists.
}
\details{
\code{nestedmerge} recursively calls itself to merge similarly-structured
named \emph{or} unnamed lists. Unnamed lists results in a "horizontal"
merge; named lists will be matched based on names. In either case, the
matching element (or list(s) of elements(s)) should also have the same
structure.

\code{nestedMerge} is a convenience wrapper for \code{nestedmerge} in cases
where list \code{a} contains elements not in list \code{b}. If using
\code{nestedmerge} in this case, only elements of list \code{a} will be
merged and returned.
}
\examples{
## l1 and l2 have similar structures
l1 <- list(a = list(1:2, NULL), b = list(1:3, NULL), c = list(1:5))
l2 <- list(a = list(NULL, 0:1), b = list(NULL, 4:6))
l3 <- list(a = list(NULL, 0:1), b = list(4:6))

nestedMerge(l1, l2)

## "fails" for `b` since `l1$b` and `l3$b` are not structured similarly
nestedMerge(l1, l3)

l1 <- list(integers = 1:3, letters = letters[1:3],
           words = c('two','strings'), rand = rnorm(5))
l2 <- list(letters = letters[24:26], booleans = c(TRUE, TRUE, FALSE),
           words = 'another', floating = c(1.2, 2.4),
           integers = 1:3 * 10)
           
nestedMerge(l1, l2)

## compare to
nestedmerge(l1, l2)

}
\seealso{
\code{\link{clist}}; adapted from
\url{http://stackoverflow.com/questions/23483421/combine-
merge-lists-by-elements-names-list-in-list}
}
